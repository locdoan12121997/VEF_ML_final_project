{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Untitled0.ipynb","version":"0.3.2","provenance":[{"file_id":"1psHj_leqhbC83rkkmq2fWudOl_hHOy_2","timestamp":1547818321790}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"qH8rn-tHPszl","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]},{"metadata":{"id":"aEmPhcmHPv5l","colab_type":"code","colab":{}},"cell_type":"code","source":["#@title Example form fields\n","#@markdown Forms support many types of fields.\n","\n","no_type_checking = ''  #@param\n","string_type = 'example'  #@param {type: \"string\"}\n","slider_value = 142  #@param {type: \"slider\", min: 100, max: 200}\n","number = 102  #@param {type: \"number\"}\n","date = '2010-11-05'  #@param {type: \"date\"}\n","pick_me = \"monday\"  #@param ['monday', 'tuesday', 'wednesday', 'thursday']\n","select_or_input = \"apples\" #@param [\"apples\", \"bananas\", \"oranges\"] {allow-input: true}\n","#@markdown ---\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"yNs17pkOzoM6","colab_type":"code","colab":{}},"cell_type":"code","source":["from lightgbm import LGBMRegressor\n","\n","import os # processing file path\n","import gzip # unzip the .gz file, not used here\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import matplotlib.pyplot as plt # data visualization\n","from scipy import sparse\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.metrics import accuracy_score\n","\n","from sklearn.metrics import mean_squared_error\n","from math import sqrt"],"execution_count":0,"outputs":[]},{"metadata":{"id":"KnwedXi80A-n","colab_type":"code","colab":{}},"cell_type":"code","source":["def count_metric(y_actual, y_predicted):\n","    y_actual_log = np.log(y_actual + 1)\n","    y_predicted_log = np.log(y_predicted + 1)\n","    rms = sqrt(mean_squared_error(y_actual_log, y_predicted_log))\n","    return rms\n","\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"SS2bFXO30F4A","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":207},"outputId":"882ae640-a009-4635-e673-ad6fbe5c99f0","executionInfo":{"status":"ok","timestamp":1547813019788,"user_tz":-420,"elapsed":4472,"user":{"displayName":"Phạm Hải Hà","photoUrl":"","userId":"08979977117278542738"}}},"cell_type":"code","source":["train = pd.read_csv('train_data_hhp1.csv')\n","test_data = pd.read_csv('test_data_hhp1.csv')\n","validation, test=train_test_split(test_data,test_size=0.3,random_state=0)\n","\n","\n","\n","Ytrain=train['DaysInHospital']\n","Ytest=test['DaysInHospital']#, axis=1, inplace=True)\n","Yvalidation=validation['DaysInHospital']\n","\n","\n","train.drop(['DaysInHospital','Year','ClaimsTruncated','MemberID'],axis=1, inplace=True)\n","test.drop(['DaysInHospital','Year','ClaimsTruncated','MemberID'],axis=1, inplace=True)\n","validation.drop(['DaysInHospital','Year','ClaimsTruncated','MemberID'],axis=1, inplace=True)\n","\n","\n"],"execution_count":5,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:14: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n","  \n"],"name":"stderr"}]},{"metadata":{"id":"zUpMaPx70Wzw","colab_type":"code","colab":{}},"cell_type":"code","source":["logYtrain=np.log(Ytrain+1)\n","logYtest=np.log(Ytest+1)\n","logYvalidation=np.log(Yvalidation+1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"cKr6hcCS0Zr6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":241},"outputId":"32565bd8-daf3-44a5-dd28-8cf83c397775","executionInfo":{"status":"ok","timestamp":1547813032250,"user_tz":-420,"elapsed":1568,"user":{"displayName":"Phạm Hải Hà","photoUrl":"","userId":"08979977117278542738"}}},"cell_type":"code","source":["#scale feature\n","\n","sc = StandardScaler()\n","X_train_std = sc.fit_transform(train)\n","X_test_std = sc.fit_transform(test)\n","X_validation_std = sc.fit_transform(validation)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/preprocessing/data.py:625: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by StandardScaler.\n","  return self.partial_fit(X, y)\n","/usr/local/lib/python3.6/dist-packages/sklearn/base.py:462: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by StandardScaler.\n","  return self.fit(X, **fit_params).transform(X)\n","/usr/local/lib/python3.6/dist-packages/sklearn/preprocessing/data.py:625: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by StandardScaler.\n","  return self.partial_fit(X, y)\n","/usr/local/lib/python3.6/dist-packages/sklearn/base.py:462: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by StandardScaler.\n","  return self.fit(X, **fit_params).transform(X)\n","/usr/local/lib/python3.6/dist-packages/sklearn/preprocessing/data.py:625: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by StandardScaler.\n","  return self.partial_fit(X, y)\n","/usr/local/lib/python3.6/dist-packages/sklearn/base.py:462: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by StandardScaler.\n","  return self.fit(X, **fit_params).transform(X)\n"],"name":"stderr"}]},{"metadata":{"id":"_aLeqGfd0ahA","colab_type":"code","colab":{}},"cell_type":"code","source":["#Initialize LGBM\n","gbm_regr = LGBMRegressor(objective = 'regression', \n","                     boosting_type = 'dart', \n","                     metric = 'rmse',\n","                     n_estimators = 10000, #10000\n","                     num_leaves = 54, #10\n","                     learning_rate = 0.005, #0.01\n","                     #bagging_fraction = 0.9,\n","                     #feature_fraction = 0.3,\n","                     bagging_seed = 0,\n","                     max_depth = 10,\n","                     reg_alpha = 0.436193,\n","                     reg_lambda = 0.479169,\n","                     colsample_bytree = 0.508716,\n","                     min_split_gain = 0.024766\n","                    )"],"execution_count":0,"outputs":[]},{"metadata":{"id":"lujQqHUI0d7c","colab_type":"code","colab":{}},"cell_type":"code","source":["GBMregr=gbm_regr.fit(X_train_std ,logYtrain)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"eJwX-nKW0gLp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"07521f28-06ae-440a-f8f0-8276f155a93c","executionInfo":{"status":"ok","timestamp":1547815782325,"user_tz":-420,"elapsed":113816,"user":{"displayName":"Phạm Hải Hà","photoUrl":"","userId":"08979977117278542738"}}},"cell_type":"code","source":["logY_pred_test=gbm.predict(X_test_std, num_iteration= gbm.best_iteration_)\n","logY_pred_train=gbm.predict(X_train_std, num_iteration= gbm.best_iteration_)\n","print('error on testing set: ', sqrt(mean_squared_error(logYtest, logY_pred_test)),\n","     'error on training set: ', sqrt(mean_squared_error(logYtrain, logY_pred_train)))"],"execution_count":11,"outputs":[{"output_type":"stream","text":["error on testing set:  0.44537102597751077 error on training set:  0.3925968280086113\n"],"name":"stdout"}]},{"metadata":{"id":"4h4AyjEPIOrJ","colab_type":"text"},"cell_type":"markdown","source":[""]},{"metadata":{"id":"pLIuYM71Bnbk","colab_type":"code","colab":{}},"cell_type":"code","source":["import pickle\n","def export_model(model, file_name):\n","    pickle.dump(model, open(file_name, 'wb'))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"53cwIlEGCgVg","colab_type":"code","colab":{}},"cell_type":"code","source":["export_model(gbm,'LightGBM_full_imbalanced_data.sav')"],"execution_count":0,"outputs":[]},{"metadata":{"id":"sMBDPBV5DO2t","colab_type":"code","colab":{}},"cell_type":"code","source":["from lightgbm import LGBMClassifier\n","\n","gbm_class = LGBMClassifier()"],"execution_count":0,"outputs":[]},{"metadata":{"id":"KqsHPaZuEoIn","colab_type":"code","colab":{}},"cell_type":"code","source":["GBMclass=gbm_class.fit(X_train_std ,Ytrain)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Xr79PotQEzXk","colab_type":"code","colab":{}},"cell_type":"code","source":["Y_pred_test=gbm.predict(X_test_std, num_iteration= gbm.best_iteration_)\n","Y_pred_validation=gbm.predict(X_validation_std, num_iteration= gbm.best_iteration_)\n","\n","Y_pred_train=gbm.predict(X_train_std, num_iteration= gbm.best_iteration_)\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"kX354CytIcuV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"8d2d3e77-3e1d-467f-fb5a-207e9447adce","executionInfo":{"status":"ok","timestamp":1547818200366,"user_tz":-420,"elapsed":995,"user":{"displayName":"Phạm Hải Hà","photoUrl":"","userId":"08979977117278542738"}}},"cell_type":"code","source":["count_metric(Ytrain, Y_pred_train)"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.41785102198709323"]},"metadata":{"tags":[]},"execution_count":30}]},{"metadata":{"id":"mZk6oVnqJ506","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"a3d5fd8f-b5f8-4fa8-985a-73ed5d07edb5","executionInfo":{"status":"ok","timestamp":1547818241212,"user_tz":-420,"elapsed":883,"user":{"displayName":"Phạm Hải Hà","photoUrl":"","userId":"08979977117278542738"}}},"cell_type":"code","source":["count_metric(Yvalidation, Y_pred_validation)"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.44966878700024315"]},"metadata":{"tags":[]},"execution_count":33}]},{"metadata":{"id":"99Ax6HsZJ7cH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"c39097e5-4d97-4f21-dffe-49a7bbdea1d4","executionInfo":{"status":"ok","timestamp":1547818229714,"user_tz":-420,"elapsed":1046,"user":{"displayName":"Phạm Hải Hà","photoUrl":"","userId":"08979977117278542738"}}},"cell_type":"code","source":["count_metric(Ytest, Y_pred_test)"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.4472468640474825"]},"metadata":{"tags":[]},"execution_count":32}]},{"metadata":{"id":"mMhatjkUIVkp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":130},"outputId":"aa84e5d9-edc5-47d3-f5fb-09b4044c693d","executionInfo":{"status":"error","timestamp":1547818144432,"user_tz":-420,"elapsed":1068,"user":{"displayName":"Phạm Hải Hà","photoUrl":"","userId":"08979977117278542738"}}},"cell_type":"code","source":["print('RSME on traing set',count_metric(Ytrain, Y_pred_train),\n","        'RSME on validation set',count_metric(Yvalidation, Y_pred_validation),\n","        'RSME on testing set',count_metric(Ytest, Y_pred_test),\n","\n"],"execution_count":27,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-27-1398797fcf3f>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    'RSME on testing set',count_metric(Ytest, Y_pred_test),\u001b[0m\n\u001b[0m                                                           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unexpected EOF while parsing\n"]}]},{"metadata":{"id":"RpMchtOzHSn5","colab_type":"code","colab":{}},"cell_type":"code","source":["export_model(gbm_class,'LightGBMclass_full_imbalanced_data.sav')"],"execution_count":0,"outputs":[]}]}